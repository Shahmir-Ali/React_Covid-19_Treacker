{"ast":null,"code":"var _jsxFileName = \"F:\\\\coursera_react_course\\\\muhammadhasnain\\\\src\\\\components\\\\AllCountries.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles'; // import Paper from '@material-ui/core/Paper';\n\nimport { NativeSelect, FormControl } from \"@material-ui/core\"; // import Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 1000,\n    margin: '0 auto',\n    marginTop: 50\n  },\n  title: {\n    color: '#3f51b5',\n    text: 'uppercase'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n})); // export default function InfoPanel() {\n\nexport const AllCountries = setCountry => {\n  const [globalData, setglobalData] = useState([{}]); // it takes 2 thing = 1st is callback function and 2nd is array\n\n  useEffect(() => {\n    async function getData() {\n      // const response = await fetch(\"https://api.thevirustracker.com/free-api?countryTotals=ALL\");\n      const response = await fetch(\"https://corona.lmao.ninja/v2/countries/\");\n      let data = await response.json();\n      console.log(data);\n      console.log(data[0].country); // delete data.results[0].source;\n      // setglobalData(Object.values(data.countryitems[0]));\n\n      setglobalData(data[0].country); // setglobalData(data[0].country.map((country) => country.country));\n      // console.log(data.countryitems[0][1]);\n    }\n\n    getData();\n  }, [setglobalData]);\n  const classes = useStyles();\n  return (\n    /*#__PURE__*/\n    // <form className={classes.root}>\n    // {/* <form> */}\n    // {/* <Grid container spacing={3}> */}\n    // {/* <NativeSelect id=\"select\" onChange={(e)=> setCountry(e.target.value)}>\n    //     console.log(globalData);\n    // <option value=\"global\">Global</option>\n    //     {Object.keys(globalData).map((key, ind) => {\n    //         return(\n    // <Grid item xs={12} sm={4} key={ind}>\n    //     <Paper className={classes.paper} elevation={3}> \n    //     <h3 className={classes.title}>{key.replace(/_/g,' ').toUpperCase()}</h3>\n    //     <h3>{globalData[0][key]}</h3>\n    //     </Paper>\n    // </Grid>\n    //         <option key={ind} value={globalData[key].country}>{globalData[ind].country}</option>\n    //     )\n    // })}\n    //         </NativeSelect>\n    //         {/* </form> */}\n    //     {/* </Grid> */}\n    // </form> */}\n    React.createElement(FormControl, {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(NativeSelect, {\n      defaultValue: \"\",\n      onChange: e => {\n        setCountry(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 3\n      }\n    }, \"Global\"), globalData.map((country, index) => /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, country))))\n  );\n};","map":{"version":3,"sources":["F:/coursera_react_course/muhammadhasnain/src/components/AllCountries.js"],"names":["React","useEffect","useState","makeStyles","NativeSelect","FormControl","useStyles","theme","root","flexGrow","maxWidth","margin","marginTop","title","color","text","paper","padding","spacing","textAlign","palette","secondary","AllCountries","setCountry","globalData","setglobalData","getData","response","fetch","data","json","console","log","country","classes","e","target","value","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B,C,CACA;;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C,C,CACA;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,CADR;AAEFC,IAAAA,QAAQ,EAAE,IAFR;AAGFC,IAAAA,MAAM,EAAE,QAHN;AAIFC,IAAAA,SAAS,EAAE;AAJT,GAD+B;AAOrCC,EAAAA,KAAK,EAAE;AACPC,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,IAAI,EAAE;AAFC,GAP8B;AAWrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHL,IAAAA,KAAK,EAAEP,KAAK,CAACa,OAAN,CAAcL,IAAd,CAAmBM;AAHvB;AAX8B,CAAZ,CAAD,CAA5B,C,CAkBA;;AACA,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB;AACxC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA5C,CADwC,CAExC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeyB,OAAf,GAAyB;AACrB;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,CAA5B;AAEA,UAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAApB,EAPqB,CAQrB;AACA;;AACAR,MAAAA,aAAa,CAACI,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAAT,CAAb,CAVqB,CAWrB;AACA;AAEH;;AACDP,IAAAA,OAAO;AACV,GAjBQ,EAiBN,CAACD,aAAD,CAjBM,CAAT;AAmBA,QAAMS,OAAO,GAAG5B,SAAS,EAAzB;AAEA;AAAA;AACI;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACY;AACA;AACA;AACA;AACA;AACA;AAGR;AAEA;AACA;AAGR;AACA;AACA;AACA;AAER,wBAAC,WAAD;AAAa,MAAA,SAAS,EAAE,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,YAAD;AACE,MAAA,YAAY,EAAC,EADf;AAEE,MAAA,QAAQ,EAAG6B,CAAD,IAAO;AACfZ,QAAAA,UAAU,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAME;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,EAOGb,UAAU,CAACc,GAAX,CAAe,CAACL,OAAD,EAAUM,KAAV,kBACd;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,KAAK,EAAEN,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,OADH,CADD,CAPH,CADA;AA5BI;AA4CH,CApEM","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n// import Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 1000,\r\n        margin: '0 auto',\r\n        marginTop: 50,\r\n    },\r\n    title: {\r\n    color: '#3f51b5',\r\n    text: 'uppercase',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n// export default function InfoPanel() {\r\nexport const AllCountries = (setCountry) => {\r\n    const [globalData, setglobalData] = useState([{}]);\r\n    // it takes 2 thing = 1st is callback function and 2nd is array\r\n    useEffect(() => {\r\n        async function getData() {\r\n            // const response = await fetch(\"https://api.thevirustracker.com/free-api?countryTotals=ALL\");\r\n            const response = await fetch(\"https://corona.lmao.ninja/v2/countries/\");\r\n            \r\n            let data = await response.json();\r\n\r\n            console.log(data);\r\n            console.log(data[0].country);\r\n            // delete data.results[0].source;\r\n            // setglobalData(Object.values(data.countryitems[0]));\r\n            setglobalData(data[0].country);\r\n            // setglobalData(data[0].country.map((country) => country.country));\r\n            // console.log(data.countryitems[0][1]);\r\n\r\n        }\r\n        getData();\r\n    }, [setglobalData])\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        // <form className={classes.root}>\r\n            // {/* <form> */}\r\n            // {/* <Grid container spacing={3}> */}\r\n            // {/* <NativeSelect id=\"select\" onChange={(e)=> setCountry(e.target.value)}>\r\n            //     console.log(globalData);\r\n            // <option value=\"global\">Global</option>\r\n            //     {Object.keys(globalData).map((key, ind) => {\r\n            //         return(\r\n                        // <Grid item xs={12} sm={4} key={ind}>\r\n                        //     <Paper className={classes.paper} elevation={3}> \r\n                        //     <h3 className={classes.title}>{key.replace(/_/g,' ').toUpperCase()}</h3>\r\n                        //     <h3>{globalData[0][key]}</h3>\r\n                        //     </Paper>\r\n                        // </Grid>\r\n                        \r\n                        \r\n                //         <option key={ind} value={globalData[key].country}>{globalData[ind].country}</option>\r\n                        \r\n                //     )\r\n                // })}\r\n                \r\n               \r\n        //         </NativeSelect>\r\n        //         {/* </form> */}\r\n        //     {/* </Grid> */}\r\n        // </form> */}\r\n\r\n<FormControl className={\"form-control\"}>\r\n<NativeSelect\r\n  defaultValue=\"\"\r\n  onChange={(e) => {\r\n    setCountry(e.target.value);\r\n  }}\r\n>\r\n  <option value=\"\">Global</option>\r\n  {globalData.map((country, index) => (\r\n    <option key={index} value={country}>\r\n      {country}\r\n    </option>\r\n  ))}\r\n</NativeSelect>\r\n</FormControl>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}