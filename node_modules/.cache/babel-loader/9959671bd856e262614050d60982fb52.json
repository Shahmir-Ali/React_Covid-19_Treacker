{"ast":null,"code":"var _jsxFileName = \"F:\\\\coursera_react_course\\\\muhammadhasnain\\\\src\\\\components\\\\AllCountriesData.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    // maxWidth: 1000,\n    margin: '0 auto',\n    marginTop: 50,\n    width: 700,\n    height: 350\n  },\n  progress: {\n    width: '100%',\n    position: 'relative',\n    bottom: 0,\n    top: 35,\n    // right: 0,\n    // left: 0,\n    text: 'center'\n  },\n  title: {\n    color: '#3f51b5',\n    text: 'uppercase'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  green: {\n    color: 'green' //    backgroundColor: 'green',\n\n  }\n})); // export default function InfoPanel() {\n\nexport const AllCountriesData = ({\n  country,\n  setcountry\n}) => {\n  const [progress, setProgress] = React.useState(0);\n  const [buffer, setBuffer] = React.useState(10);\n  const progressRef = React.useRef(() => {});\n  React.useEffect(() => {\n    progressRef.current = () => {\n      if (progress > 100) {\n        setProgress(0);\n        setBuffer(10);\n      } else {\n        const diff = Math.random() * 10;\n        const diff2 = Math.random() * 10;\n        setProgress(progress + diff);\n        setBuffer(progress + diff + diff2);\n      }\n    };\n  });\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      progressRef.current();\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  console.log(country);\n  const [GlobalData, setGlobalData] = useState({}); // it takes 2 thing = 1st is callback function and 2nd is array\n\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(`https://corona.lmao.ninja/v2/countries/${country}`);\n      let data = await response.json();\n      console.log(data);\n      setGlobalData(data);\n    }\n\n    getData();\n  }, [country]);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, \"Total Cases\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, GlobalData.cases), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"buffer\",\n    value: progress,\n    valueBuffer: buffer,\n    style: {\n      backgroundColor: 'green'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"Today Cases\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, GlobalData.todayCases), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"buffer\",\n    value: progress,\n    valueBuffer: buffer,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, \"Total Deaths\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, GlobalData.deaths), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LinearProgress, {\n    variant: \"buffer\",\n    value: progress,\n    valueBuffer: buffer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }))))));\n};","map":{"version":3,"sources":["F:/coursera_react_course/muhammadhasnain/src/components/AllCountriesData.js"],"names":["React","useEffect","useState","makeStyles","Paper","Grid","LinearProgress","useStyles","theme","root","flexGrow","margin","marginTop","width","height","progress","position","bottom","top","text","title","color","paper","padding","spacing","textAlign","palette","secondary","green","AllCountriesData","country","setcountry","setProgress","buffer","setBuffer","progressRef","useRef","current","diff","Math","random","diff2","timer","setInterval","clearInterval","console","log","GlobalData","setGlobalData","getData","response","fetch","data","json","classes","cases","backgroundColor","todayCases","deaths"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        // maxWidth: 1000,\r\n        margin: '0 auto',\r\n        marginTop: 50,\r\n        width: 700,\r\n        height: 350,\r\n    },\r\n    progress: {\r\n        width: '100%',\r\n        position: 'relative',\r\n        bottom: 0,\r\n        top: 35,\r\n        // right: 0,\r\n        // left: 0,\r\n        text: 'center'\r\n      },\r\n    title: {\r\n    color: '#3f51b5',\r\n    text: 'uppercase',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    green: {\r\n       color: 'green',\r\n    //    backgroundColor: 'green',\r\n    },\r\n}));\r\n\r\n// export default function InfoPanel() {\r\nexport const AllCountriesData = ({ country, setcountry }) => {\r\n    const [progress, setProgress] = React.useState(0);\r\n    const [buffer, setBuffer] = React.useState(10);\r\n  \r\n    const progressRef = React.useRef(() => {});\r\n    React.useEffect(() => {\r\n      progressRef.current = () => {\r\n        if (progress > 100) {\r\n          setProgress(0);\r\n          setBuffer(10);\r\n        } else {\r\n          const diff = Math.random() * 10;\r\n          const diff2 = Math.random() * 10;\r\n          setProgress(progress + diff);\r\n          setBuffer(progress + diff + diff2);\r\n        }\r\n      };\r\n    });\r\n  \r\n    React.useEffect(() => {\r\n      const timer = setInterval(() => {\r\n        progressRef.current();\r\n      }, 500);\r\n  \r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }, []);\r\n    console.log(country);\r\n    const [GlobalData, setGlobalData] = useState({});\r\n    // it takes 2 thing = 1st is callback function and 2nd is array\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const response = await fetch(`https://corona.lmao.ninja/v2/countries/${country}`);\r\n            let data = await response.json();\r\n            console.log(data);\r\n            setGlobalData(data);\r\n\r\n        }\r\n    getData();\r\n    }, [country])\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={4}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Paper className={classes.paper} elevation={3}> \r\n                            <h3 className={classes.title}>Total Cases</h3>\r\n                            <h3>{GlobalData.cases}</h3>\r\n                            <div className={classes.progress}>\r\n                            <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} style={{backgroundColor: 'green'}}/>\r\n                            </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Paper className={classes.paper} elevation={3}> \r\n                            <h3 className={classes.title}>Today Cases</h3>\r\n                            <h3>{GlobalData.todayCases}</h3>\r\n                            <div className={classes.progress}>\r\n                            <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} color=\"secondary\"/>\r\n                            </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Paper className={classes.paper} elevation={3}> \r\n                            <h3 className={classes.title}>Total Deaths</h3>\r\n                            <h3>{GlobalData.deaths}</h3>\r\n                            <div className={classes.progress}>\r\n                            <LinearProgress variant=\"buffer\" value={progress} valueBuffer={buffer} />\r\n                            </div>\r\n                            </Paper>\r\n                        </Grid>\r\n                \r\n               \r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}